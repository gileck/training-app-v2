import { ObjectId } from 'mongodb';

/**
 * Represents a weekly progress entry for a user's training plan
 * Based on the schema defined in database-schema.md
 */
export interface WeeklyProgress {
  _id: ObjectId;
  userId: ObjectId;        // Reference to users._id
  planId: ObjectId;        // Reference to trainingPlans._id
  weekNumber: number;      // Integer, starts at 1
  completed: boolean;
  startDate: Date;         // First day of the week
  endDate: Date;           // Last day of the week
  notes?: string;          // Optional
  createdAt: Date;
  updatedAt: Date;
}

/**
 * Type for creating a new weekly progress document
 * Omits the _id field which is generated by MongoDB
 */
export type WeeklyProgressCreate = Omit<WeeklyProgress, '_id'>;

/**
 * Type for updating a weekly progress document
 * All fields are optional except updatedAt
 */
export type WeeklyProgressUpdate = Partial<Omit<WeeklyProgress, '_id' | 'userId' | 'planId' | 'weekNumber' | 'createdAt'>> & {
  updatedAt: Date;
};

/**
 * Represents a filter for querying weekly progress entries
 */
export interface WeeklyProgressFilter {
  _id?: ObjectId;
  userId?: ObjectId;
  planId?: ObjectId;
  weekNumber?: number;
  completed?: boolean;
  startDate?: { $gte?: Date, $lte?: Date };
  endDate?: { $gte?: Date, $lte?: Date };
} 